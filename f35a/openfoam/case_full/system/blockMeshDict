/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  6                                     |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

cv_x_min -20.0;
cv_x_max  60.0;
cv_y_min -15.0;
cv_y_max  15.0;
cv_z_min -15.0;
cv_z_max  15.0;

s2_x_min  -5.0;
s2_x_max  15.0;

convertToMeters 1.0;

vertices
(
    ( $cv_x_min $cv_y_min $cv_z_min )
    ( $s2_x_min $cv_y_min $cv_z_min )
    ( $s2_x_max $cv_y_min $cv_z_min )
    ( $cv_x_max $cv_y_min $cv_z_min )
    ( $cv_x_min       0.0 $cv_z_min )
    ( $s2_x_min       0.0 $cv_z_min )
    ( $s2_x_max       0.0 $cv_z_min )
    ( $cv_x_max       0.0 $cv_z_min )
    ( $cv_x_min $cv_y_max $cv_z_min )
    ( $s2_x_min $cv_y_max $cv_z_min )
    ( $s2_x_max $cv_y_max $cv_z_min )
    ( $cv_x_max $cv_y_max $cv_z_min )
    ( $cv_x_min $cv_y_min       0.0 )
    ( $s2_x_min $cv_y_min       0.0 )
    ( $s2_x_max $cv_y_min       0.0 )
    ( $cv_x_max $cv_y_min       0.0 )
    ( $cv_x_min       0.0       0.0 )
    ( $s2_x_min       0.0       0.0 )
    ( $s2_x_max       0.0       0.0 )
    ( $cv_x_max       0.0       0.0 )
    ( $cv_x_min $cv_y_max       0.0 )
    ( $s2_x_min $cv_y_max       0.0 )
    ( $s2_x_max $cv_y_max       0.0 )
    ( $cv_x_max $cv_y_max       0.0 )
    ( $cv_x_min $cv_y_min $cv_z_max )
    ( $s2_x_min $cv_y_min $cv_z_max )
    ( $s2_x_max $cv_y_min $cv_z_max )
    ( $cv_x_max $cv_y_min $cv_z_max )
    ( $cv_x_min       0.0 $cv_z_max )
    ( $s2_x_min       0.0 $cv_z_max )
    ( $s2_x_max       0.0 $cv_z_max )
    ( $cv_x_max       0.0 $cv_z_max )
    ( $cv_x_min $cv_y_max $cv_z_max )
    ( $s2_x_min $cv_y_max $cv_z_max )
    ( $s2_x_max $cv_y_max $cv_z_max )
    ( $cv_x_max $cv_y_max $cv_z_max )
);

blocks
(
    hex (  0  1  5  4 12 13 17 16 ) ( 15 15 15 ) simpleGrading ( 0.5 0.5 0.5 )
    hex (  4  5  9  8 16 17 21 20 ) ( 15 15 15 ) simpleGrading ( 0.5 2.0 0.5 )
    hex ( 12 13 17 16 24 25 29 28 ) ( 15 15 15 ) simpleGrading ( 0.5 0.5 2.0 )
    hex ( 16 17 21 20 28 29 33 32 ) ( 15 15 15 ) simpleGrading ( 0.5 2.0 2.0 )
    
    hex (  1  2  6  5 13 14 18 17 ) ( 30 15 15 ) simpleGrading ( 1.0 0.5 0.5 )
    hex (  5  6 10  9 17 18 22 21 ) ( 30 15 15 ) simpleGrading ( 1.0 2.0 0.5 )
    hex ( 13 14 18 17 25 26 30 29 ) ( 30 15 15 ) simpleGrading ( 1.0 0.5 2.0 )
    hex ( 17 18 22 21 29 30 34 33 ) ( 30 15 15 ) simpleGrading ( 1.0 2.0 2.0 )
    
    hex (  2  3  7  6 14 15 19 18 ) ( 45 15 15 ) simpleGrading ( 2.0 0.5 0.5 )
    hex (  6  7 11 10 18 19 23 22 ) ( 45 15 15 ) simpleGrading ( 2.0 2.0 0.5 )
    hex ( 14 15 19 18 26 27 31 30 ) ( 45 15 15 ) simpleGrading ( 2.0 0.5 2.0 )
    hex ( 18 19 23 22 30 31 35 34 ) ( 45 15 15 ) simpleGrading ( 2.0 2.0 2.0 )
);

edges
(
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (  0 12 16  4 )
            (  4 16 20  8 )
            ( 12 24 28 16 )
            ( 16 28 32 20 )
        );
    }
    
    outlet
    {
        type patch;
        faces
        (
            (  3  7 19 15 )
            (  7 11 23 19 )
            ( 15 19 31 27 )
            ( 19 23 35 31 )
        );
    }
    
    walls
    {
        type patch;
        faces
        (
            // left
            (  0  1 13 12 ) 
            ( 12 13 25 24 )
            (  1  2 14 13 )
            ( 13 14 26 25 )
            (  2  3 15 14 )
            ( 14 15 27 26 )

            // right
            (  8 20 21  9 ) 
            ( 20 32 33 21 )
            (  9 21 22 10 )
            ( 21 33 34 22 )
            ( 10 22 23 11 )
            ( 22 34 35 23 )
            
            // bottom
            (  0  4  5  1 ) 
            (  4  8  9  5 )
            (  1  5  6  2 )
            (  5  9 10  6 )
            (  2  6  7  3 )
            (  6 10 11  7 )
            
            // top
            ( 24 25 29 28 ) 
            ( 28 29 33 32 )
            ( 25 26 30 29 )
            ( 29 30 34 33 )
            ( 26 27 31 30 )
            ( 30 31 35 34 )
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
